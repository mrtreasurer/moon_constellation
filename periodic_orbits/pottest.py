#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep  6 10:09:41 2019

@author: bert
"""
import numpy as np


from definitions import legendre, cos_lambda, sin_lambda, distances


c = np.array([[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
              [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
              [-9.09010949e-05, -1.86273608e-09,  3.46376274e-05,  0.00000000e+00,  0.00000000e+00],
              [-3.20307168e-06,  2.63418359e-05,  1.41853317e-05,  1.22862645e-05,  0.00000000e+00],
              [ 3.21409545e-06, -6.00061940e-06, -7.09370102e-06, -1.35880467e-06, -6.02939150e-06]])

s = np.array([[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
              [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
              [ 0.00000000e+00, -1.42453895e-09,  1.44063504e-08,  0.00000000e+00,  0.00000000e+00],
              [ 0.00000000e+00,  5.46307861e-06,  4.88913912e-06, -1.78246271e-06,  0.00000000e+00],
              [ 0.00000000e+00,  1.65955645e-06, -6.78562736e-06, -1.34332572e-05,  3.93525694e-06]])

r_m = 0.004521331945889698
mu = 0.012150586559602567

coor = np.array([-1.311519120505e-2,
                 5.435394815081e-4,
                 0.])

r = np.linalg.norm(coor)
sin_phi = coor[2]/r

p = legendre(5, sin_phi)
cos_l = cos_lambda(coor, 5)
sin_l = sin_lambda(coor, 5)

u = mu/r_m * c[0, 0] * 1 * p[0, 0]
print(f"0:0 {u}")
u += mu/r_m * c[1, 0] * r_m/r * p[1, 0]
print(f"1:0 {u}")
u += mu/r_m * r_m/r * (c[1, 1] * cos_l[1] + s[1, 1] * sin_l[1]) * p[1, 1]
print(f"1:1 {u}")
u += mu/r_m * c[2, 0] * (r_m/r)**2 * p[2, 0]
print(f"2:0 {u}")
u += mu/r_m * (r_m/r)**2 * (c[2, 1] * cos_l[1] + s[2, 1] * sin_l[1]) * p[2, 1]
print(f"2:1 {u}")



c = 3.885779329543
u = -1.281711107594e-2
v = -3.056086111584e-1
w = 9.077797920947e-1
x = -1.311519120505e-2
y = 5.435394815081e-4
z = 0

r, rho = distances([x, y, z])

u = (c + u**2 + v**2 + w**2)/2 - (x - 1 + mu)**2/2 - y**2/2 - (1 - mu)/rho - mu/r
print(u)